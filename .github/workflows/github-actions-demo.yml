name: GitHub Actions Demo
on: [push]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [17.x]

    steps:
      # Setup and Build
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install packages
        run: npm install
      - name: build package
        run: npm run build
      - name: lint package
        run: npm run lint
      - name: test package
        run: npm run test

      # Upload to IPFS:
      - name: Try to upload built packages to IPFS
        if: ${{ job.status == 'success' && github.event.pull_request.merged == true }}
        uses: aquiladev/ipfs-action@v0.1.6
        id: ipfs
        with:
          path: ./build
          service: pinata
          pinataKey: ${{ secrets.PINATA_API_KEY }}
          pinataSecret: ${{ secrets.PINATA_API_SECRET }}
          pinataPinName: react-site

      # Testing Discord:
      # old args: 'The project {{ EVENT_PAYLOAD.repository.full_name }} has been deployed.'
      # - name: Discord Success Notification
      #   if: ${{ always() && job.status == 'success' }}
      #   env:
      #     DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      #   uses: Ilshidur/action-discord@master
      #   with: 
      #     args: "Github repo: ${{ github.repository }}\n- Branch: ${{ github.ref }}\n- Status: üéâ  ${{ job.status }}  üçè"

      # - name: Discord Failure Notification
      #   if: ${{ always() && job.status != 'success' }}
      #   env:
      #     DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      #   uses: Ilshidur/action-discord@master
      #   with: 
      #     args: "Github repo: ${{ github.repository }}\n- Branch: ${{ github.ref }}\n- Status: ü§î  ${{ job.status }}  üí£üí•"

      # Start the Slack Messages:
      # - name: Send custom SUCCESS JSON data to Slack workflow
      #   if: ${{ always() && job.status == 'success' }}
      #   id: slackSuccess
      #   uses: slackapi/slack-github-action@v1.16.0
      #   with:
      #     payload: "{\"message\":\"Github repo: ${{ github.repository }}\\n- Branch: ${{ github.ref }}\\n- Status: üéâ  ${{ job.status }}  üçè\"}"
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      # - name: Send custom FAILURE JSON data to Slack workflow
      #   if: ${{ always() && job.status != 'success' }}
      #   id: slackFailure
      #   uses: slackapi/slack-github-action@v1.16.0
      #   with:
      #     payload: "{\"message\":\"Github repo: ${{ github.repository }}\\n- Branch: ${{ github.ref }}\\n- Status: ü§î  ${{ job.status }}  üí£üí•\"}" 
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
